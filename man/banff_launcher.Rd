% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_banff_launcher.R
\name{banff_launcher}
\alias{banff_launcher}
\title{Main function to start the program}
\usage{
banff_launcher(
  banff_file,
  output_folder = getwd(),
  language = "label:en",
  option_filter,
  detail = FALSE,
  .test_TA = FALSE
)
}
\arguments{
\item{banff_file}{A character string identifying the name of the file to be
processed.}

\item{output_folder}{A character string identifying the folder path where
the bookdown report files will be saved.}

\item{language}{optional input allowing user to get their diagnosis in a
specific language. Options are "label:en" (default), "label:fr", "label:de",
"label:sp", "label:nl", "label:jp", "label:in".}

\item{option_filter}{Optional argument allowing the user to filter its
dataset using \code{\link[dplyr:filter]{dplyr::filter()}} synthax. The column used to filter must exist.}

\item{detail}{Whether the output should include temporary variables generated
in the process or not. FALSE by default.}

\item{.test_TA}{Temporary parameter to test with 'ta' variable.}
}
\value{
Nothing to be returned. The function generates a folder (if not already
exists) where Excel files are stored.
}
\description{
This function takes in input a path string of an input file. The function
internally adresses series of tests that assess the input dataset. If any of
these tests fails, the user gets information allowing them to correct the
file and reprocess. Once the tests do not fail, the dataset is given for all
the observation a diagnosis (using internally the
function \code{\link[=add_diagnosis]{add_diagnosis()}}). The output dataset, along with its associated
labels (\code{label:en} by defaut) are provided to the user in an Excel format
file accessibee in the output_folder they provided (working direct as a
default.) The dataset comes with a report that summarize information about
variable distributions and descriptive statistics.
}
\examples{
{

banff_file <- system.file("extdata", "example.xlsx", package = "banffIT")
banff_launcher(banff_file, output_folder = tempdir())

}

}
